name: Deploy Kadane-Backend schemas to Amazon RDS

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/sql/schemas/**'
      - '.github/workflows/aws-backend-db.yml'

permissions:
  id-token: write
  contents: read

jobs:
  deploy-schemas:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Create deployment package
        run: |
          # Create a directory for the deployment package
          mkdir deployment-package
          # Copy lambda function to deployment directory
          cp lambda_function.py deployment-package/
          # Install dependencies to the deployment directory
          pip install --target ./deployment-package psycopg2-binary boto3
          # Create deployment zip
          cd deployment-package && zip -r ../lambda_deployment.zip .
          cd .. && rm -r deployment-package
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Zip schema files
        run: |
          zip -r schema_files.zip src/sql/schemas

      - name: Upload schema to S3
        run: |
          aws s3 cp schema_files.zip s3://${{ secrets.SCHEMA_S3_BUCKET }}/schemas/schema_files.zip

      - name: Update Lambda Environment Variables
        run: |
          aws lambda update-function-configuration \
            --function-name ${{ vars.AWS_BACKEND_DB_LAMBDA_FUNCTION }} \
            --environment "Variables={
                DB_HOST=${{ secrets.AWS_DB_HOST }},
                DB_PORT=${{ secrets.AWS_DB_PORT }},
                DB_USER=${{ secrets.AWS_DB_USER }},
                DB_PASSWORD=${{ secrets.AWS_DB_PASSWORD }},
                DB_NAME=${{ secrets.AWS_DB_NAME }},
                SCHEMA_BUCKET=${{ secrets.SCHEMA_S3_BUCKET }},
                SCHEMA_KEY=schema_files.zip
            }"
          
      - name: Invoke Lambda
        run: |
          aws lambda invoke \
            --function-name ${{ vars.AWS_BACKEND_DB_LAMBDA_FUNCTION }} \
            --payload '{}' \
            --cli-binary-format raw-in-base64-out \
            response.json

      - name: Print Lambda response
        run: cat response.json

      - name: Check deployment status
        run: |
          STATUS=$(cat response.json | jq -r '.statusCode')
          if [ $STATUS -ne 200 ]; then
            echo "Schema deployment failed"
            exit 1
          fi
