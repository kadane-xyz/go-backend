services:
  api:
    build: .
    ports:
      - 80:80/tcp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1/health"]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file: 
      - '.env'
    restart: unless-stopped
  doc:
    image: redocly/redoc
    ports:
      - 8080:80/tcp
    environment:
      SPEC_URL: swagger.yaml
    volumes:
      - ./openapi.yaml:/usr/share/nginx/html/swagger.yaml
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  db:
    container_name: postgres
    image: postgres:15
    ports:
      - 5432:5432/tcp
    volumes:
      - postgres:/var/lib/postgresql/data
    env_file:
      - '.env' 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  redis:
    image: redis:7.2.4
    command: [
      "bash",
      "-c",
      'docker-entrypoint.sh --appendonly no --requirepass "$$REDIS_PASSWORD"'
    ]
    env_file: judge0.conf
    restart: unless-stopped
  judge0-db:
    image: postgres:16.2
    container_name: judge0-db
    ports:
      - 5433:5432/tcp
    env_file: judge0.conf
    restart: unless-stopped
  # CGROUP v1 required for now
  judge0-server:
    image: judge0/judge0:latest 
    volumes:
      - ./judge0.conf:/judge0.conf:ro
    ports:
      - 2358:2358/tcp
    privileged: true
    restart: unless-stopped
  judge0-worker:
    image: judge0/judge0:latest 
    command: ["./scripts/workers"]
    volumes:
      - ./judge0.conf:/judge0.conf:ro
    privileged: true
    restart: unless-stopped
volumes:
  postgres: